pipeline {
    agent any
    tools {
        nodejs "Nodejs"
    }

    environment {
        SCANNER_HOME = tool 'SonarScanner'
        DOCKER_IMAGE = 'riyanuddin/frontend:latest'
        NAMESPACE    = 'three-tier'
    }

    stages {
        stage('Clone') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/riyanuddin17/TWSThreeTierAppChallenge.git'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh """
                        ${SCANNER_HOME}/bin/sonar-scanner \
                          -Dsonar.projectKey=three-tier \
                          -Dsonar.sources=.
                    """
                }
            }
        }
        stage('Build Frontend') {
            steps {
                dir('Application-Code/frontend') {
                    sh 'npm install'
                }
            }
        }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage('Docker Build & Push Frontend') {
            steps {
                script {
                    withDockerRegistry(credentialsId: '241c7517-0bff-4825-af81-251eba028004', toolName: 'docker') {
                        dir('Application-Code/frontend') {
                            sh "docker build -t frontend ."
                            sh "docker tag frontend ${DOCKER_IMAGE}"
                            sh "docker push ${DOCKER_IMAGE}"
                        }
                    }
                }
            }
        }
        stage("TRIVY"){
            steps{
                sh "trivy image ${DOCKER_IMAGE} > trivyimage.txt" 
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Use Jenkins credential that stores your kubeconfig
                    withKubeConfig([credentialsId: 'test-kops-kubeconfig']) {
                        sh "kubectl apply -f Kubernetes-Manifests-file/Frontend/ -n ${NAMESPACE}"
                    }
                }
            }
        }
    }
}

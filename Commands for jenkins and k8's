EC2 Requirement:

Jenkins Machine:
Ubuntu
AMI: 20.4
t2.large
20GB

K8's
Ubuntu
worksataion-> t2..medium, with 20 GB
master-node-> t2..medium
worker-node-> t2.medium

SonarQube Machine:
Ubuntu 
AMI: 20.04
t2.medium
Storage: 15GB

-------------------------------
1)..... Install DOCKER on Jenkins machine:

sudo apt-get update
sudo apt install docker.io
docker ps
sudo chown $USER /var/run/docker.sock

--------------------------------------------------------------------------------------------------------------

2).... Install Docker on SonarQube machine:

>> <install docker with above commands>

>> sudo apt-get update

SonarQube:
>> docker run -d -p 9000:9000 sonarqube:lts-community

------------------------------------------------------------------------------------------------------------

3).... JENKINS install on Jenkins machine:

Run on machine java
op:
>> sudo apt install openjdk-17-jre-headless -y         --> USE THIS
ci/cd or automation -> release tool

(or)

0. Install JAVA:
>> sudo apt update
>> sudo apt install fontconfig openjdk-21-jre
>> sudo apt install openjdk-11-jdk


1.
Jenkins Installation:
1) Type on Google "Jenkins installation on amazon linux"

2) click on Jenkins on AWS(https://www.jenkins.io)

3) click on "Installing Jenkins" -> "Linux" -> "Debian/Ubuntu" 

Direct link to the above page: "https://www.jenkins.io/doc/book/installing/linux/#debianubuntu"

4) Under "Long Term Support release" you will find links just run those

PUT THIS IN BASH SCRIPT AND EXECUTE TO MAKE IT SIMPLE:

sudo wget -O /etc/apt/keyrings/jenkins-keyring.asc \
  https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
echo "deb [signed-by=/etc/apt/keyrings/jenkins-keyring.asc]" \
  https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
  /etc/apt/sources.list.d/jenkins.list > /dev/null
sudo apt update
sudo apt install jenkins
sudo systemctl enable Jenkins
sudo usermod -aG docker jenkins


To check  whether Jenkins is running :
>> netstat -ntpl

2.
Now access Jenkins:
1)<ip>:8080
2) set password:
/var/lib/Jenkins/secrets/initialAdminPassword
3) cat /var/lib/Jenkins/secrets/initialAdminPassword

3.
Customize Jenkins:
select "Install suggested plugins"

4.
Create First Admin User:
-> Username
-> Password
-> Confirm password
-> Full name
-> E-mail address
next next next

----------------------------------------------------------------
INSTALL PLUGIN:
Manage Jenkins -> Pluggins


Install plugin:

SonarQube scanner
NodeJS Plugin 1.6.0
OWASP Dependency-Check 5.4.0
Docker
Docker Pipeline
docker-build-step
CloudBees Docker Build and Publish
Kubernetes
Kubernetes CLI
--------------------------------------------------------------------------------------------

4)...Trivy install on Jenkins machine:

Install Trivy:https://trivy.dev/v0.18.3/installation/

sudo apt-get install wget apt-transport-https gnupg lsb-release
wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
sudo apt-get update
sudo apt-get install trivy

------------------------------------------------------------------------------------------

1) Attach a role to this EC2 with Administrator access.

KOPS Setup Amazon linux:

SIMILAR DOCUMENTATION LINK FOR KOPE SETUPT:"https://medium.com/@veerababu.narni232/how-i-set-up-a-kubernetes-cluster-on-aws-ec2-using-kops-61e7cf0ade6b"


2) Aws cli:
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install


3) Kops:
export KOPS_VERSION=v1.28.4
curl -LO https://github.com/kubernetes/kops/releases/download/${KOPS_VERSION}/kops-linux-amd64
chmod +x kops-linux-amd64
sudo mv kops-linux-amd64 /usr/local/bin/kops
kops version

4) Create S3 bucket:
aws s3 mb s3://riyansbucketkops
aws s3 ls
export KOPS_STATE_STORE=s3://riyansbucketkops


5) Kubectl:
export KUBECTL_VERSION=v1.29.2
sudo curl --silent --location -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
sudo chmod +x /usr/local/bin/kubectl
kubectl version

6) In ~ directory run because for kops to create other instance we need to have the public and private keys so that it can ssh:
>>[~]: ssh-keygen

7) Create the cluster:
export KOPS_STATE_STORE=s3://riyansbucketkops

kops create cluster --name=test.k8s.local --zones=us-east-1a,us-east-1b --node-count=2 --node-size=t2..medium --master-size=t2..medium --node-volume-size=20 --master-volume-size=20 --yes 

##IT WILL TAKE 10 MINUTES FOR CREATING CLUSTER BECAUSE KOPS HAS ITS OWN VPC, SUBNETS AND ALB AND ALL SO IT WILL TAKE TIME TO CREATE ALL THOSE RESOURCES


kops delete cluster --name=test.k8s.local --state=s3://riyansbucketkops --yes


